# This is a basic workflow to help you get started with Actions

name: Maven Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]



env:
  PROJECT_ID: ${{secrets.GKE_PROJECT}}
  GKE_CLUSTER: test-cluster-1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: simple-backend
  IMAGE: simple-backend-image
  TAG: 1.0.0



  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}   

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple-backend:latest

      - name: Setup Google Cloud CLI (gcloud)
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{secrets.GKE_SA_KEY}}
          project_id: ${{secrets.GKE_PROJECT}}

#      - name: Set Cluster # mal probieren -> WICHTIG !!!
#        run: |-
#          gcloud container clusters get-credentials test-cluster-1 --zone us-central1

      # evtl nicht notwendig
      - name: Configure Docker
        run: |-
          gcloud --quiet auth configure-docker

      - name: Build Docker Image
        #run: |-
        #  docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG" .
        run: |-
          docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
      - name: Publish Docker Image to GCR
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

 #     - name: Deploy Image to GKE cluster
  #      run: |-
   #       ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
    #      ./kustomize build . | kubectl apply -f -
     #     kubectl rollout status deployment/$DEPLOYMENT_NAME
      #    kubectl get services -o wide

      - name: Deploy Image to GKE cluster
        run: |-
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
